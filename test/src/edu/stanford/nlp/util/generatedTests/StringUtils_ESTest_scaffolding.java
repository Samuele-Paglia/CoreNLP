/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Dec 06 09:26:34 GMT 2018
 */

package edu.stanford.nlp.util;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class StringUtils_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "edu.stanford.nlp.util.StringUtils"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/samu/GitHub/CoreNLP"); 
    java.lang.System.setProperty("user.home", "/home/samu"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "samu"); 
    java.lang.System.setProperty("user.timezone", "Europe/Rome"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(StringUtils_ESTest_scaffolding.class.getClassLoader() ,
      "edu.stanford.nlp.sequences.BestSequenceFinder",
      "edu.stanford.nlp.ling.CoreAnnotations$UnaryAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$CoarseTagAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.SimpleNode",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatcher$BranchStates",
      "edu.stanford.nlp.ling.CoreAnnotations$NERIDAnnotation",
      "edu.stanford.nlp.util.IntPair",
      "edu.stanford.nlp.util.ArrayMap",
      "edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AnnotatePunctuationFunction2",
      "edu.stanford.nlp.semgraph.semgrex.SemgrexParserConstants",
      "edu.stanford.nlp.ling.CoreAnnotations$CanonicalEntityMentionIndexAnnotation",
      "edu.stanford.nlp.util.Interner",
      "edu.stanford.nlp.stats.ClassicCounter",
      "edu.stanford.nlp.trees.tregex.TregexParserConstants",
      "edu.stanford.nlp.trees.tregex.TregexParserTokenManager",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$LIMITED_GRANDKID",
      "edu.stanford.nlp.semgraph.SemanticGraphEdge",
      "edu.stanford.nlp.trees.tregex.TregexParser$JJCalls",
      "edu.stanford.nlp.util.ArrayCoreMap$1$1",
      "edu.stanford.nlp.trees.international.french.DybroFrenchHeadFinder",
      "edu.stanford.nlp.ie.crf.CliquePotentialFunction",
      "edu.stanford.nlp.trees.tregex.Relation$IthChildOf",
      "edu.stanford.nlp.ling.CoreAnnotations$TagLabelAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ShapeAnnotation",
      "edu.stanford.nlp.util.StringUtils",
      "edu.stanford.nlp.util.MetaClass$ClassFactory",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$RIGHT_SIBLING",
      "edu.stanford.nlp.optimization.DiffFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$ForcedSentenceEndAnnotation",
      "edu.stanford.nlp.semgraph.semgrex.NodePattern$NodeMatcher",
      "edu.stanford.nlp.optimization.HasRegularizerParamRange",
      "edu.stanford.nlp.ie.NERFeatureFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$ColumnDataClassifierAnnotation",
      "edu.stanford.nlp.trees.GrammaticalStructure$Extras",
      "edu.stanford.nlp.util.logging.RedirectOutputHandler",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$PatternExpr",
      "edu.stanford.nlp.util.MaxSizeConcurrentHashSet",
      "edu.stanford.nlp.ling.CoreAnnotations$SRL_ID",
      "edu.stanford.nlp.ling.tokensregex.types.Expression",
      "edu.stanford.nlp.trees.NPTmpRetainingTreeNormalizer",
      "edu.stanford.nlp.time.Options",
      "edu.stanford.nlp.util.FuzzyInterval$FuzzyComparable",
      "edu.stanford.nlp.sequences.Clique$CliqueEqualityWrapper",
      "edu.stanford.nlp.semgraph.semgrex.SemgrexParser",
      "edu.stanford.nlp.ling.CoreAnnotations$AnswerProbAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$SemanticHeadTagAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToFootNode",
      "edu.stanford.nlp.trees.tregex.tsurgeon.PruneNode$Matcher",
      "edu.stanford.nlp.io.BZip2PipedOutputStream",
      "edu.stanford.nlp.trees.tregex.tsurgeon.InsertNode$Matcher",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$ConcatCoreMapListAggregator",
      "edu.stanford.nlp.time.TimeFormatter$NumericDateComponent",
      "edu.stanford.nlp.util.logging.PrettyLogger",
      "edu.stanford.nlp.international.french.FrenchMorphoFeatureSpecification",
      "edu.stanford.nlp.ling.CoreAnnotations$FemaleGazAnnotation",
      "edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryFollows",
      "edu.stanford.nlp.ie.NERClassifierCombiner$Language",
      "edu.stanford.nlp.ling.CoreAnnotations$EntityMentionIndexAnnotation",
      "edu.stanford.nlp.trees.international.pennchinese.UniversalChineseSemanticHeadFinder",
      "edu.stanford.nlp.trees.tregex.tsurgeon.Node",
      "edu.stanford.nlp.ling.CoreAnnotations$SpanAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode$RelabelMode",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$5",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$6",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$7",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$2",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$3",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$4",
      "edu.stanford.nlp.ling.TaggedWordFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$DocTitleAnnotation",
      "edu.stanford.nlp.process.Tokenizer",
      "edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToFootNode$Matcher",
      "edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure",
      "edu.stanford.nlp.trees.GrammaticalStructure$1",
      "edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon",
      "edu.stanford.nlp.util.Factory",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionsAnnotation",
      "edu.stanford.nlp.semgraph.SemanticGraphFormatter",
      "edu.stanford.nlp.ling.CoreAnnotations$QuotationIndexAnnotation",
      "edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure",
      "edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryIsDominatedBy",
      "edu.stanford.nlp.trees.tregex.tsurgeon.ExciseNode",
      "edu.stanford.nlp.util.logging.Redwood$MessageType",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLPredicateAnnotation",
      "edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddRelativeNodeFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$CategoryAnnotation",
      "edu.stanford.nlp.trees.TypedDependency",
      "edu.stanford.nlp.process.PTBTokenizer",
      "edu.stanford.nlp.ling.CoreAnnotations$LeftTermAnnotation",
      "edu.stanford.nlp.trees.international.spanish.SpanishHeadFinder",
      "edu.stanford.nlp.stats.GeneralizedCounter$CounterView",
      "edu.stanford.nlp.objectbank.ObjectBank",
      "edu.stanford.nlp.util.CollectionFactory$HashSetFactory",
      "edu.stanford.nlp.trees.ConstituentFactory",
      "edu.stanford.nlp.trees.TransformingTreebank",
      "edu.stanford.nlp.ling.CoreAnnotations$AuthorAnnotation",
      "edu.stanford.nlp.trees.tregex.DescriptionPattern",
      "edu.stanford.nlp.ling.CoreAnnotations$BestCliquesAnnotation",
      "edu.stanford.nlp.util.BinaryHeapPriorityQueue$Entry",
      "edu.stanford.nlp.ie.crf.CRFNonLinearSecondOrderLogConditionalObjectiveFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$IsNewlineAnnotation",
      "edu.stanford.nlp.io.IOUtils$2",
      "edu.stanford.nlp.ling.CoreAnnotations$BagOfWordsAnnotation",
      "edu.stanford.nlp.ie.NERClassifierCombiner",
      "edu.stanford.nlp.trees.tregex.tsurgeon.HoldTreeNode$Matcher",
      "edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams$AnnotatePunctuationFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$LabelIDAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$AbgeneAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation",
      "edu.stanford.nlp.objectbank.IteratorFromReaderFactory",
      "edu.stanford.nlp.sequences.SeqClassifierFlags",
      "edu.stanford.nlp.stats.GeneralizedCounter",
      "edu.stanford.nlp.ie.crf.CRFClassifier",
      "edu.stanford.nlp.ling.CoreAnnotations$EndIndexAnnotation",
      "edu.stanford.nlp.ling.tokensregex.types.Tags",
      "edu.stanford.nlp.ling.CoreAnnotations$ArabicSegAnnotation",
      "edu.stanford.nlp.trees.GrammaticalStructure",
      "edu.stanford.nlp.trees.TreeTransformer",
      "edu.stanford.nlp.ling.CoreAnnotations$MarkingAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLUTokenSpanAnnotation",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$RepeatSemantics",
      "edu.stanford.nlp.trees.tregex.TregexParseException",
      "edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack",
      "edu.stanford.nlp.trees.Labeled",
      "edu.stanford.nlp.semgraph.semgrex.VariableStrings",
      "edu.stanford.nlp.ling.CoreAnnotations$SRLIDAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$StemAnnotation",
      "edu.stanford.nlp.util.ErasureUtils",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatchResult$MatchedGroupInfo",
      "edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode",
      "edu.stanford.nlp.time.TimeFormatter$CustomDateFormatExtractor",
      "edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure$ExtraTreeDepFilter",
      "edu.stanford.nlp.ling.CoreAnnotations$AnswerObjectAnnotation",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$RIGHT_IMMEDIATE_SIBLING",
      "edu.stanford.nlp.util.MutableInteger",
      "edu.stanford.nlp.util.HashableCoreMap",
      "edu.stanford.nlp.trees.TreebankLanguagePack",
      "edu.stanford.nlp.ling.Document",
      "edu.stanford.nlp.trees.international.pennchinese.ChineseHeadFinder",
      "edu.stanford.nlp.ling.HasIndex",
      "edu.stanford.nlp.ling.CoreAnnotations$EntityClassAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TokenMgrError",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLUSecondaryDepsAnnotation",
      "edu.stanford.nlp.util.MapFactory$IdentityHashMapFactory",
      "edu.stanford.nlp.trees.tregex.tsurgeon.CreateSubtreeNode$Matcher",
      "edu.stanford.nlp.util.PropertiesUtils$Property",
      "edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionNoisyLabel",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatcher",
      "edu.stanford.nlp.trees.tregex.tsurgeon.InsertNode",
      "edu.stanford.nlp.ling.tokensregex.NodePattern",
      "edu.stanford.nlp.util.MetaClass$ClassCreationException",
      "edu.stanford.nlp.util.concurrent.ThreadsafeProcessor",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$ConcatAggregator",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$LEFT_SIBLING",
      "edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToHeadNode$Matcher",
      "edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNode$RelabelMatcher",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$2$1",
      "edu.stanford.nlp.ling.CoreAnnotations$NormalizedNamedEntityTagAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$EntityTypeAnnotation",
      "edu.stanford.nlp.trees.tregex.TregexPattern",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$RepeatedRecordInfo",
      "edu.stanford.nlp.trees.tregex.TregexPatternCompiler",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$VarGroupBindings",
      "edu.stanford.nlp.optimization.DiffFloatFunction",
      "edu.stanford.nlp.trees.tregex.tsurgeon.HoldTreeNode",
      "edu.stanford.nlp.trees.international.negra.NegraHeadFinder",
      "edu.stanford.nlp.time.TimeFormatter$TimeZoneComponent",
      "edu.stanford.nlp.util.MutableDouble",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator",
      "edu.stanford.nlp.time.SUTime$PartialTime",
      "edu.stanford.nlp.trees.HasParent",
      "edu.stanford.nlp.ling.CoreAnnotations$ArgumentAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ExceptionAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ContextsAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$XmlContextAnnotation",
      "edu.stanford.nlp.ie.crf.CRFClassifierWithDropout",
      "edu.stanford.nlp.trees.TreeGraphNodeFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$LEndAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ValueAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$IsDateRangeAnnotation",
      "edu.stanford.nlp.util.logging.Redwood$FileHandler",
      "edu.stanford.nlp.process.PTBLexer",
      "edu.stanford.nlp.ie.regexp.NumberSequenceClassifier",
      "edu.stanford.nlp.util.RuntimeInterruptedException",
      "edu.stanford.nlp.ling.TaggedWord$LabelFactoryHolder",
      "edu.stanford.nlp.ling.HasContext",
      "edu.stanford.nlp.ling.CoreAnnotations$LeftChildrenNodeAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation",
      "edu.stanford.nlp.trees.tregex.Relation$HasIthChild",
      "edu.stanford.nlp.util.Pair$MutableInternedPair",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager",
      "edu.stanford.nlp.util.FileProcessor",
      "edu.stanford.nlp.trees.tregex.CoordinationPattern",
      "edu.stanford.nlp.ling.CoreAnnotations$DomainAnnotation",
      "edu.stanford.nlp.trees.BobChrisTreeNormalizer",
      "edu.stanford.nlp.fsm.DFSATransition",
      "edu.stanford.nlp.util.logging.VisibilityHandler",
      "edu.stanford.nlp.trees.ModCollinsHeadFinder",
      "edu.stanford.nlp.trees.HeadFinder",
      "edu.stanford.nlp.stats.TwoDimensionalCounterInterface",
      "edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation",
      "edu.stanford.nlp.trees.tregex.TokenMgrError",
      "edu.stanford.nlp.util.BinaryHeapPriorityQueue",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLDepParentIndexAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLUMisc",
      "edu.stanford.nlp.ling.BasicDocument",
      "edu.stanford.nlp.time.TimeFormatter$DateTimeFieldComponent",
      "edu.stanford.nlp.trees.tregex.tsurgeon.JJTTsurgeonParserState",
      "edu.stanford.nlp.trees.CompositeTreeTransformer",
      "edu.stanford.nlp.util.logging.VisibilityHandler$State",
      "edu.stanford.nlp.util.logging.OutputHandler",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TreeLocation",
      "edu.stanford.nlp.ling.CoreAnnotations$QuotationsAnnotation",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$SeqStartState",
      "edu.stanford.nlp.trees.tregex.tsurgeon.DeleteNode$Matcher",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$LEFT_IMMEDIATE_SIBLING",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$ADJACENT_NODE",
      "edu.stanford.nlp.ling.HasLemma",
      "edu.stanford.nlp.ling.CoreAnnotations$PresetAnswerAnnotation",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler",
      "edu.stanford.nlp.ling.CoreAnnotations$D2_LBeginAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$WebAnnotation",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$1",
      "edu.stanford.nlp.trees.TreeReaderFactory",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$SequenceStartPatternExpr",
      "edu.stanford.nlp.semgraph.semgrex.ParseException",
      "edu.stanford.nlp.util.MapFactory$ConcurrentMapFactory",
      "edu.stanford.nlp.international.arabic.ArabicMorphoFeatureSpecification$ArabicMorphoFeatures",
      "edu.stanford.nlp.ling.CoreLabel",
      "edu.stanford.nlp.ling.CoreAnnotations$UTypeAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$DocIDAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.ReplaceNode$Matcher",
      "edu.stanford.nlp.ling.TaggedWord",
      "edu.stanford.nlp.ling.CoreLabel$GenericAnnotation",
      "edu.stanford.nlp.util.HasInterval",
      "edu.stanford.nlp.time.TimeFormatter$RegexComponent",
      "edu.stanford.nlp.sequences.FeatureFactory",
      "edu.stanford.nlp.util.TypesafeMap$Key",
      "edu.stanford.nlp.trees.tregex.tsurgeon.IfExistsNode$Matcher",
      "edu.stanford.nlp.trees.tregex.SimpleCharStream",
      "edu.stanford.nlp.process.Morphology",
      "edu.stanford.nlp.util.logging.BooleanLogRecordHandler",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionTagAnnotation",
      "edu.stanford.nlp.ling.tokensregex.BasicSequenceMatchResult$MatchedGroup",
      "edu.stanford.nlp.ling.CoreAnnotations$YearAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$INAnnotation",
      "edu.stanford.nlp.ling.StringLabel",
      "edu.stanford.nlp.util.Interval",
      "edu.stanford.nlp.trees.MemoryTreebank",
      "edu.stanford.nlp.sequences.TrueCasingForNISTDocumentReaderAndWriter",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$GroupEndState",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$State",
      "edu.stanford.nlp.ie.AbstractSequenceClassifier",
      "edu.stanford.nlp.sequences.TrueCasingForNISTDocumentReaderAndWriter$LineToTrueCasesParser",
      "edu.stanford.nlp.util.logging.JavaUtilLoggingHandler",
      "edu.stanford.nlp.ling.CoreAnnotations$InterpretationAnnotation",
      "edu.stanford.nlp.ie.crf.CRFClassifierWithLOP",
      "edu.stanford.nlp.time.TimeExpressionExtractor",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonMatcher",
      "edu.stanford.nlp.util.IntTuple",
      "edu.stanford.nlp.trees.tregex.TregexParser$LookaheadSuccess",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration",
      "edu.stanford.nlp.ling.CoreAnnotations$RoleAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$HaveAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$AntecedentAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$GrandparentAnnotation",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$GRANDKID",
      "edu.stanford.nlp.ling.CoreAnnotations$UBlockAnnotation",
      "edu.stanford.nlp.trees.AbstractTreebankLanguagePack",
      "edu.stanford.nlp.optimization.AbstractCachingDiffFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLDepTypeAnnotation",
      "edu.stanford.nlp.trees.tregex.TregexMatcher",
      "edu.stanford.nlp.ling.CoreAnnotations$LabelWeightAnnotation",
      "edu.stanford.nlp.stats.TwoDimensionalCounter",
      "edu.stanford.nlp.ling.CoreAnnotations$D2_LEndAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$EntityRuleAnnotation",
      "edu.stanford.nlp.util.logging.Redwood$Record",
      "edu.stanford.nlp.process.Morpha",
      "edu.stanford.nlp.sequences.SequenceModel",
      "edu.stanford.nlp.util.logging.Color",
      "edu.stanford.nlp.ling.CoreAnnotations$DocSourceTypeAnnotation",
      "edu.stanford.nlp.time.TimeFormatter$TimeZoneOffsetComponent",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionDateAnnotation",
      "edu.stanford.nlp.trees.RecursiveTreeTransformer",
      "edu.stanford.nlp.ling.CoreAnnotations$SentencePositionAnnotation",
      "edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryPrecedes",
      "edu.stanford.nlp.ling.CoreAnnotations$AfterAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonRuntimeException",
      "edu.stanford.nlp.ling.CoreAnnotations$CovertIDAnnotation",
      "edu.stanford.nlp.trees.LabeledScoredTreeFactory",
      "edu.stanford.nlp.optimization.AbstractStochasticCachingDiffUpdateFunction",
      "edu.stanford.nlp.util.IntQuadruple",
      "edu.stanford.nlp.pipeline.CoreMapAggregator",
      "edu.stanford.nlp.util.logging.Style",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatcher$MatchedStates",
      "edu.stanford.nlp.ling.CoreAnnotation",
      "edu.stanford.nlp.classify.GeneralDataset",
      "edu.stanford.nlp.trees.tregex.tsurgeon.DeleteNode",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatcher$FindType",
      "edu.stanford.nlp.objectbank.ResettableReaderIteratorFactory",
      "edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder$TagSet$2",
      "edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder$TagSet$1",
      "edu.stanford.nlp.trees.tregex.Relation$Heads",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$NodesMatchChecker",
      "edu.stanford.nlp.ling.CoreAnnotations$SRLInstancesAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$SemanticWordAnnotation",
      "edu.stanford.nlp.util.RegexStringFilter",
      "edu.stanford.nlp.process.CoreTokenFactory",
      "edu.stanford.nlp.trees.tregex.tsurgeon.FetchNode$Matcher",
      "edu.stanford.nlp.util.PaddedList",
      "edu.stanford.nlp.trees.CoordinationTransformer",
      "edu.stanford.nlp.ling.CoreAnnotations$ArabicCharAnnotation",
      "edu.stanford.nlp.ling.Word",
      "edu.stanford.nlp.ling.CoreAnnotations$SemanticHeadWordAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$AbstrAnnotation",
      "edu.stanford.nlp.sequences.DocumentReaderAndWriter",
      "edu.stanford.nlp.util.Scored",
      "edu.stanford.nlp.ie.ner.CMMClassifier",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserConstants",
      "edu.stanford.nlp.parser.lexparser.TregexPoweredTreebankParserParams$AnnotateHeadFunction",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPatternRoot$Matcher",
      "edu.stanford.nlp.parser.metrics.AbstractEval",
      "edu.stanford.nlp.trees.CollinsHeadFinder",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionEndAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$IsURLAnnotation",
      "edu.stanford.nlp.ling.WordTag$LabelFactoryHolder",
      "edu.stanford.nlp.trees.Dependency",
      "edu.stanford.nlp.ling.CoreAnnotations$DependentsAnnotation",
      "edu.stanford.nlp.trees.ud.EnhancementOptions",
      "edu.stanford.nlp.util.Pair",
      "edu.stanford.nlp.parser.lexparser.TregexPoweredTreebankParserParams",
      "edu.stanford.nlp.util.Comparators",
      "edu.stanford.nlp.process.TokenizerFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$LocationAnnotation",
      "edu.stanford.nlp.process.WordTokenFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$EntityMentionToCorefMentionMappingAnnotation",
      "edu.stanford.nlp.util.logging.FilterHandler",
      "edu.stanford.nlp.ling.CoreAnnotations$PrevChildAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionAnnotation",
      "edu.stanford.nlp.optimization.Function",
      "edu.stanford.nlp.ling.CoreAnnotations$NotAnnotation",
      "edu.stanford.nlp.ling.tokensregex.MultiNodePattern",
      "edu.stanford.nlp.ling.Labeled",
      "edu.stanford.nlp.ling.CoreAnnotations$NumTxtSentencesAnnotation",
      "edu.stanford.nlp.process.PTBTokenizer$PTBTokenizerFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$NumericCompositeValueAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$WordnetSynAnnotation",
      "edu.stanford.nlp.util.Filters$CategoricalFilter",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$SearchNodeIterator",
      "edu.stanford.nlp.international.Language",
      "edu.stanford.nlp.ling.CoreAnnotations$DistSimAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$MorphoPersAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ParaPositionAnnotation",
      "edu.stanford.nlp.math.SloppyMath",
      "edu.stanford.nlp.ling.CoreAnnotations$NumericCompositeObjectAnnotation",
      "edu.stanford.nlp.process.CoreLabelTokenFactory",
      "edu.stanford.nlp.graph.Graph",
      "edu.stanford.nlp.ling.HasTag",
      "edu.stanford.nlp.ling.CoreAnnotations$FeaturesAnnotation",
      "edu.stanford.nlp.util.ArrayStringFilter$Mode",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionAuthorCharacterOffsetBeginAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$GenderAnnotation",
      "edu.stanford.nlp.trees.tregex.DescriptionPattern$DescriptionMatcher",
      "edu.stanford.nlp.trees.AbstractTreebankLanguagePack$BasicCategoryStringFunction",
      "edu.stanford.nlp.util.ArrayMap$Entry",
      "edu.stanford.nlp.util.logging.Redwood",
      "edu.stanford.nlp.trees.tregex.tsurgeon.SimpleCharStream",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$4",
      "edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$3",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$2",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$1",
      "edu.stanford.nlp.ie.crf.CRFCliqueTree",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$8",
      "edu.stanford.nlp.parser.lexparser.NegraPennTreebankParserParams",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$7",
      "edu.stanford.nlp.semgraph.semgrex.SemgrexParseException",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$6",
      "edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$5",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLDepAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$TrueTagAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$MorphoCaseAnnotation",
      "edu.stanford.nlp.semgraph.semgrex.Env",
      "edu.stanford.nlp.ling.CoreAnnotations$DocTypeAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinNode$Matcher",
      "edu.stanford.nlp.ling.CoreAnnotations$QuotesAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation",
      "edu.stanford.nlp.classify.Classifier",
      "edu.stanford.nlp.ling.CoreAnnotations$ParagraphIndexAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$FirstChildAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$LastGazAnnotation",
      "edu.stanford.nlp.ling.HasWord",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLSRLAnnotation",
      "edu.stanford.nlp.trees.international.pennchinese.ChineseSemanticHeadFinder",
      "edu.stanford.nlp.ie.crf.CRFDatum",
      "edu.stanford.nlp.semgraph.semgrex.SimpleCharStream",
      "edu.stanford.nlp.ling.CoreAnnotations$OriginalTextAnnotation",
      "edu.stanford.nlp.trees.EnglishGrammaticalStructure$ExtraTreeDepFilter",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionAuthorCharacterOffsetEndAnnotation",
      "edu.stanford.nlp.time.TimeFormatter$FormatComponent",
      "edu.stanford.nlp.ling.CoreAnnotations$GoldAnswerAnnotation",
      "edu.stanford.nlp.util.Generics",
      "edu.stanford.nlp.ling.CoreAnnotations$OriginalCharAnnotation",
      "edu.stanford.nlp.util.logging.Redwood$ConsoleHandler",
      "edu.stanford.nlp.ling.CoreAnnotations$GazetteerAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$BeginIndexAnnotation",
      "edu.stanford.nlp.graph.DirectedMultiGraph",
      "edu.stanford.nlp.international.arabic.process.ArabicTokenizer$ArabicTokenizerFactory",
      "edu.stanford.nlp.util.MapFactory",
      "edu.stanford.nlp.parser.lexparser.Options",
      "edu.stanford.nlp.time.TimeFormatter$TextDateComponent",
      "edu.stanford.nlp.ling.CoreAnnotations$NeighborsAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ForcedSentenceUntilEndAnnotation",
      "edu.stanford.nlp.sequences.SeqClassifierFlags$SlashHyphenEnum",
      "edu.stanford.nlp.ling.CoreAnnotations$MorphoGenAnnotation",
      "edu.stanford.nlp.util.HashableCoreMap$HashableCoreMapException",
      "edu.stanford.nlp.ling.CoreAnnotations$StateAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParseException",
      "edu.stanford.nlp.ling.CoreAnnotations$ParagraphAnnotation",
      "edu.stanford.nlp.util.Filters",
      "edu.stanford.nlp.trees.CopulaHeadFinder",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionIndexAnnotation",
      "edu.stanford.nlp.util.logging.Redwood$Flag",
      "edu.stanford.nlp.ling.CoreAnnotations$FreqAnnotation",
      "edu.stanford.nlp.ie.crf.HasCliquePotentialFunction",
      "edu.stanford.nlp.sequences.ListeningSequenceModel",
      "edu.stanford.nlp.util.logging.Redwood$RedwoodChannels",
      "edu.stanford.nlp.optimization.AbstractStochasticCachingDiffFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$UnknownAnnotation",
      "edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams$EnglishTrain",
      "edu.stanford.nlp.util.Filters$CollectionAcceptFilter",
      "edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher",
      "edu.stanford.nlp.ling.CoreAnnotations$AnswerAnnotation",
      "edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder$TagSet",
      "edu.stanford.nlp.util.HashIndex$2",
      "edu.stanford.nlp.util.HashIndex$1",
      "edu.stanford.nlp.semgraph.semgrex.TokenMgrError",
      "edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams",
      "edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinNode",
      "edu.stanford.nlp.ling.CoreAnnotations$GenericTokensAnnotation",
      "edu.stanford.nlp.ling.Label",
      "edu.stanford.nlp.ling.IndexedWord",
      "edu.stanford.nlp.util.CollectionFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$CharAnnotation",
      "edu.stanford.nlp.trees.tregex.Relation",
      "edu.stanford.nlp.semgraph.semgrex.CoordinationPattern",
      "edu.stanford.nlp.trees.tregex.tsurgeon.CreateSubtreeNode",
      "edu.stanford.nlp.util.logging.VisibilityHandler$1",
      "edu.stanford.nlp.ling.CoreAnnotations$SubcategorizationAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$SpaceBeforeAnnotation",
      "edu.stanford.nlp.util.CollectionFactory$LinkedListFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$BeAnnotation",
      "edu.stanford.nlp.parser.lexparser.TregexPoweredTreebankParserParams$SimpleStringFunction",
      "edu.stanford.nlp.util.logging.SLF4JHandler$1",
      "edu.stanford.nlp.ling.HasOffset",
      "edu.stanford.nlp.ie.crf.CRFClassifierNoisyLabel",
      "edu.stanford.nlp.objectbank.ObjectBank$OBIterator",
      "edu.stanford.nlp.ling.CoreAnnotations$GazAnnotation",
      "edu.stanford.nlp.ie.crf.FactorTable",
      "edu.stanford.nlp.trees.TreebankFactory",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$GRANDSOMETHING",
      "edu.stanford.nlp.ling.CoreAnnotations$ArgDescendentAnnotation",
      "edu.stanford.nlp.sequences.SequenceListener",
      "edu.stanford.nlp.trees.tregex.tsurgeon.PruneNode",
      "edu.stanford.nlp.util.logging.Redwood$Util",
      "edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams$MarkConjTypeFunction",
      "edu.stanford.nlp.process.SerializableFunction",
      "edu.stanford.nlp.trees.tregex.tsurgeon.IfExistsNode",
      "edu.stanford.nlp.ling.CoreAnnotations$CostMagnificationAnnotation",
      "edu.stanford.nlp.optimization.Minimizer",
      "edu.stanford.nlp.ling.ValueLabel",
      "edu.stanford.nlp.trees.tregex.Relation$25",
      "edu.stanford.nlp.trees.tregex.Relation$24",
      "edu.stanford.nlp.trees.tregex.Relation$23",
      "edu.stanford.nlp.ling.CoreAnnotations$GeniaAnnotation",
      "edu.stanford.nlp.util.Filters$NegatedFilter",
      "edu.stanford.nlp.sequences.Clique",
      "edu.stanford.nlp.ling.CoreAnnotations$SentenceBeginAnnotation",
      "edu.stanford.nlp.optimization.HasInitial",
      "edu.stanford.nlp.ling.CoreAnnotations$NumerizedTokensAnnotation",
      "edu.stanford.nlp.trees.tregex.Relation$22",
      "edu.stanford.nlp.trees.tregex.Relation$21",
      "edu.stanford.nlp.semgraph.semgrex.CoordinationPattern$CoordinationMatcher",
      "edu.stanford.nlp.io.RuntimeIOException",
      "edu.stanford.nlp.trees.tregex.Relation$20",
      "edu.stanford.nlp.trees.tregex.Relation$19",
      "edu.stanford.nlp.trees.tregex.Relation$18",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$SequenceEndPatternExpr",
      "edu.stanford.nlp.trees.tregex.Relation$17",
      "edu.stanford.nlp.trees.TreePrint",
      "edu.stanford.nlp.trees.tregex.Relation$16",
      "edu.stanford.nlp.trees.tregex.Relation$15",
      "edu.stanford.nlp.trees.tregex.Relation$14",
      "edu.stanford.nlp.trees.tregex.Relation$13",
      "edu.stanford.nlp.trees.tregex.Relation$12",
      "edu.stanford.nlp.parser.metrics.Eval",
      "edu.stanford.nlp.util.MapFactory$ArrayMapFactory",
      "edu.stanford.nlp.objectbank.ObjectBank$PathToFileFunction",
      "edu.stanford.nlp.util.logging.SLF4JHandler",
      "edu.stanford.nlp.util.ArrayUtils",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$SIBLING_RELATION",
      "edu.stanford.nlp.international.arabic.ArabicMorphoFeatureSpecification",
      "edu.stanford.nlp.ling.CoreAnnotations$CorefMentionToEntityMentionMappingAnnotation",
      "edu.stanford.nlp.trees.tregex.Relation$11",
      "edu.stanford.nlp.trees.tregex.tsurgeon.ExciseNode$Matcher",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$NodePatternExpr",
      "edu.stanford.nlp.trees.tregex.Relation$10",
      "edu.stanford.nlp.ling.CoreAnnotations$LMiddleAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$LBeginAnnotation",
      "edu.stanford.nlp.util.PriorityQueue",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$GroupStartState",
      "edu.stanford.nlp.semgraph.semgrex.SemgrexParserTokenManager",
      "edu.stanford.nlp.ling.CoreAnnotations$NumericTypeAnnotation",
      "edu.stanford.nlp.ling.DocumentReader",
      "edu.stanford.nlp.util.MetaClass$ConstructorNotFoundException",
      "edu.stanford.nlp.ling.CoreAnnotations$PartOfSpeechAnnotation",
      "edu.stanford.nlp.process.LexedTokenFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$SemanticTagAnnotation",
      "edu.stanford.nlp.parser.lexparser.TreebankLangParserParams",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern",
      "edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddEquivalencedConjNode",
      "edu.stanford.nlp.trees.CompositeTreebank",
      "edu.stanford.nlp.util.CollectionUtils",
      "edu.stanford.nlp.ling.CoreAnnotations$XmlElementAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$PriorAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$SentencesAnnotation",
      "edu.stanford.nlp.trees.TreeNormalizer",
      "edu.stanford.nlp.ling.CoreAnnotations$TopicAnnotation",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$EQUALS",
      "edu.stanford.nlp.time.TimeFormatter$LiteralComponent",
      "edu.stanford.nlp.trees.tregex.tsurgeon.FetchNode",
      "edu.stanford.nlp.semgraph.semgrex.NodePattern",
      "edu.stanford.nlp.util.logging.Redwood$RecordHandlerTree",
      "edu.stanford.nlp.util.AbstractIterator",
      "edu.stanford.nlp.stats.EquivalenceClasser",
      "edu.stanford.nlp.util.DeltaIndex",
      "edu.stanford.nlp.trees.BasicCategoryTreeTransformer",
      "edu.stanford.nlp.util.logging.RerouteChannel",
      "edu.stanford.nlp.ling.CoreAnnotations$PhraseWordsTagAnnotation",
      "edu.stanford.nlp.parser.lexparser.UnknownWordModel",
      "edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams",
      "edu.stanford.nlp.ling.CoreAnnotations$ChineseCharAnnotation",
      "edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$ApproximateRepeatSemantics",
      "edu.stanford.nlp.ling.CoreAnnotations$DictAnnotation",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$2",
      "edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$3",
      "edu.stanford.nlp.ling.CoreAnnotations$IDAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.ParseException",
      "edu.stanford.nlp.io.IOUtils",
      "edu.stanford.nlp.trees.tregex.VariableStrings",
      "edu.stanford.nlp.ling.CoreAnnotations$ParagraphsAnnotation",
      "edu.stanford.nlp.trees.tregex.DescriptionPattern$DescriptionMode",
      "edu.stanford.nlp.process.PTBLexer$UntokenizableOptions",
      "edu.stanford.nlp.ling.CoreAnnotations$NumericObjectAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTreeConstants",
      "edu.stanford.nlp.semgraph.semgrex.Token",
      "edu.stanford.nlp.util.Triple",
      "edu.stanford.nlp.time.TimeFormatter$FormatterBuilder",
      "edu.stanford.nlp.time.TimeExpressionExtractorImpl",
      "edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack",
      "edu.stanford.nlp.ling.HasNER",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers",
      "edu.stanford.nlp.ling.HasOriginalText",
      "edu.stanford.nlp.trees.DependencyFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$ChineseSegAnnotation",
      "edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack",
      "edu.stanford.nlp.ling.CoreAnnotations$LastTaggedAnnotation",
      "edu.stanford.nlp.trees.DiskTreebank",
      "edu.stanford.nlp.ling.CoreAnnotations$DoAnnotation",
      "edu.stanford.nlp.semgraph.SemanticGraph",
      "edu.stanford.nlp.trees.UnnamedConcreteDependency",
      "edu.stanford.nlp.ling.CoreAnnotations$IndexAnnotation",
      "edu.stanford.nlp.util.ReflectionLoading$ReflectionLoadingException",
      "edu.stanford.nlp.parser.lexparser.IntTaggedWord",
      "edu.stanford.nlp.ling.Datum",
      "edu.stanford.nlp.ling.CoreAnnotations$CoNLLUFeats",
      "edu.stanford.nlp.trees.tregex.tsurgeon.CoindexNodes$Matcher",
      "edu.stanford.nlp.ling.CoreAnnotations$WordFormAnnotation",
      "edu.stanford.nlp.util.logging.PrettyLoggable",
      "edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams$AddRelativeNodeFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$PositionAnnotation",
      "edu.stanford.nlp.time.TimeFormatter",
      "edu.stanford.nlp.process.AbstractTokenizer",
      "edu.stanford.nlp.ling.CoreAnnotations$SpeakerAnnotation",
      "edu.stanford.nlp.util.MetaClass",
      "edu.stanford.nlp.trees.Constituent",
      "edu.stanford.nlp.trees.tregex.Relation$ImmediatelyHeadedBy",
      "edu.stanford.nlp.trees.GrammaticalStructureFactory",
      "edu.stanford.nlp.parser.lexparser.ChineseTreebankParserParams",
      "edu.stanford.nlp.ie.ClassifierCombiner$CombinationMode",
      "edu.stanford.nlp.trees.tregex.tsurgeon.ReplaceNode",
      "edu.stanford.nlp.ling.CoreLabel$CoreLabelFactory",
      "edu.stanford.nlp.ling.AbstractToken",
      "edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$MonthAnnotation",
      "edu.stanford.nlp.util.CollectionFactory$TreeSetFactory",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParser",
      "edu.stanford.nlp.ling.CoreAnnotations$SentenceIDAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations",
      "edu.stanford.nlp.util.logging.RedwoodPrintStream",
      "edu.stanford.nlp.trees.GrammaticalRelation",
      "edu.stanford.nlp.trees.SimpleTree",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$ALIGNMENT",
      "edu.stanford.nlp.ie.crf.CRFClassifierNonlinear",
      "edu.stanford.nlp.optimization.StochasticCalculateMethods",
      "edu.stanford.nlp.trees.tregex.tsurgeon.AdjoinToHeadNode",
      "edu.stanford.nlp.ling.CoreAnnotations$NumericCompositeTypeAnnotation",
      "edu.stanford.nlp.trees.tregex.Relation$UnbrokenCategoryDominates",
      "edu.stanford.nlp.international.morph.MorphoFeatureSpecification$MorphoFeatureType",
      "edu.stanford.nlp.ie.crf.CRFNonLinearLogConditionalObjectiveFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation",
      "edu.stanford.nlp.time.SUTime$Temporal",
      "edu.stanford.nlp.parser.lexparser.SpanishTreebankParserParams$MarkPrefixFunction",
      "edu.stanford.nlp.parser.lexparser.TrainOptions",
      "edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddRelativeNodeRegexFunction",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern",
      "edu.stanford.nlp.stats.GeneralizedCounter$OneDimensionalCounterView",
      "edu.stanford.nlp.ling.AbstractCoreLabel",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$GOVERNER",
      "edu.stanford.nlp.ling.CoreAnnotations$WordSenseAnnotation",
      "edu.stanford.nlp.ling.CategoryWordTagFactory",
      "edu.stanford.nlp.util.Interval$RelType",
      "edu.stanford.nlp.util.ArrayCoreMap",
      "edu.stanford.nlp.trees.EnglishPatterns",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$ExactRepeatSemantics",
      "edu.stanford.nlp.util.IntUni",
      "edu.stanford.nlp.trees.DependencyTyper",
      "edu.stanford.nlp.international.Language$1",
      "edu.stanford.nlp.ling.CoreAnnotations$SentenceEndAnnotation",
      "edu.stanford.nlp.util.Quadruple",
      "edu.stanford.nlp.semgraph.semgrex.Alignment",
      "edu.stanford.nlp.ling.CoreAnnotations$MaleGazAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$LineNumberAnnotation",
      "edu.stanford.nlp.stats.Sampler",
      "edu.stanford.nlp.ling.CoreAnnotations$PhraseWordsAnnotation",
      "edu.stanford.nlp.ling.WordFactory",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$NodePatternState",
      "edu.stanford.nlp.classify.RVFDataset",
      "edu.stanford.nlp.trees.tregex.tsurgeon.CoindexNodes",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TreeLocation$LocationMatcher",
      "edu.stanford.nlp.trees.TreeGraphNode",
      "edu.stanford.nlp.fsm.DFSA",
      "edu.stanford.nlp.ling.CoreAnnotations$VerbSenseAnnotation",
      "edu.stanford.nlp.parser.lexparser.Lexicon",
      "edu.stanford.nlp.trees.Tree",
      "edu.stanford.nlp.international.morph.MorphoFeatureSpecification",
      "edu.stanford.nlp.util.HashIndex",
      "edu.stanford.nlp.trees.international.arabic.ArabicHeadFinder",
      "edu.stanford.nlp.io.EncodingFileReader",
      "edu.stanford.nlp.trees.tregex.tsurgeon.CoindexationGenerator",
      "edu.stanford.nlp.international.arabic.process.ArabicTokenizer",
      "edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams",
      "edu.stanford.nlp.trees.tregex.Relation$ImmediatelyHeads",
      "edu.stanford.nlp.util.IdentityHashSet",
      "edu.stanford.nlp.ling.CoreAnnotations$AbbrAnnotation",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$GroupPatternExpr",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$PendingType",
      "edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunctionWithDropout",
      "edu.stanford.nlp.trees.Treebank",
      "edu.stanford.nlp.ling.WordTag",
      "edu.stanford.nlp.optimization.FloatFunction",
      "edu.stanford.nlp.trees.tregex.TregexParser",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$GRANDPARENT",
      "edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$DayAnnotation",
      "edu.stanford.nlp.optimization.HasFeatureGrouping",
      "edu.stanford.nlp.trees.PennTreebankLanguagePack",
      "edu.stanford.nlp.time.SUTime$Time",
      "edu.stanford.nlp.ling.CoreAnnotations$LemmaAnnotation",
      "edu.stanford.nlp.util.CoreMap",
      "edu.stanford.nlp.util.MapFactory$TreeMapFactory",
      "edu.stanford.nlp.sequences.ObjectBankWrapper",
      "edu.stanford.nlp.ling.CoreAnnotations$BeforeAnnotation",
      "edu.stanford.nlp.util.concurrent.SynchronizedInterner",
      "edu.stanford.nlp.util.PropertiesUtils",
      "edu.stanford.nlp.parser.lexparser.HebrewTreebankParserParams",
      "edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack",
      "edu.stanford.nlp.ling.CoreAnnotations$LabelAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ProtoAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$UseMarkedDiscourseAnnotation",
      "edu.stanford.nlp.trees.EnglishGrammaticalStructure",
      "edu.stanford.nlp.pipeline.Annotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ParentAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$QuotedAnnotation",
      "edu.stanford.nlp.trees.AbstractCollinsHeadFinder",
      "edu.stanford.nlp.semgraph.SemanticGraphEdge$SemanticGraphEdgeTargetComparator",
      "edu.stanford.nlp.trees.TreeReader",
      "edu.stanford.nlp.parser.lexparser.Extractor",
      "edu.stanford.nlp.ling.CoreAnnotations$UnclosedQuotationsAnnotation",
      "edu.stanford.nlp.trees.tregex.ParseException",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatchAction",
      "edu.stanford.nlp.util.IntTriple",
      "edu.stanford.nlp.ie.ClassifierCombiner",
      "edu.stanford.nlp.ling.CoreAnnotations$PossibleAnswersAnnotation",
      "edu.stanford.nlp.time.TimeFormatter$TimeZoneIdComponent",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatcher$BranchState",
      "edu.stanford.nlp.trees.UnnamedDependency",
      "edu.stanford.nlp.stats.Counter",
      "edu.stanford.nlp.time.TimeExpressionExtractorFactory",
      "edu.stanford.nlp.trees.LabeledScoredTreeNode",
      "edu.stanford.nlp.trees.tregex.tsurgeon.MoveNode$Matcher",
      "edu.stanford.nlp.util.logging.Redwood$1",
      "edu.stanford.nlp.ling.RVFDatum",
      "edu.stanford.nlp.ling.HasCategory",
      "edu.stanford.nlp.ie.regexp.ChineseNumberSequenceClassifier",
      "edu.stanford.nlp.ling.WordLemmaTag",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$ConcatTextAggregator",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$1",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$2",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$3",
      "edu.stanford.nlp.ling.CoreAnnotations$CalendarAnnotation",
      "edu.stanford.nlp.trees.tregex.Relation$HeadedBy",
      "edu.stanford.nlp.ling.tokensregex.types.Value",
      "edu.stanford.nlp.ling.tokensregex.Env",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$SeqEndState",
      "edu.stanford.nlp.ling.CoreAnnotations$IDFAnnotation",
      "edu.stanford.nlp.trees.SimpleTreeFactory",
      "edu.stanford.nlp.trees.tregex.tsurgeon.MoveNode",
      "edu.stanford.nlp.ling.CoreAnnotations$CommonWordsAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$PredictedAnswerAnnotation",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParser$JJCalls",
      "edu.stanford.nlp.util.CollectionFactory$ArrayListFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$WordPositionAnnotation",
      "edu.stanford.nlp.ling.tokensregex.NodePattern$AnyNodePattern",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$SpecialNodePatternExpr",
      "edu.stanford.nlp.ling.CoreAnnotations$StatementTextAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$BestFullAnnotation",
      "edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams$AnnotatePunctuationFunction",
      "edu.stanford.nlp.util.ArrayMap$1",
      "edu.stanford.nlp.trees.GrammaticalStructureFromDependenciesFactory",
      "edu.stanford.nlp.classify.Dataset",
      "edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack",
      "edu.stanford.nlp.ling.LabelFactory",
      "edu.stanford.nlp.pipeline.CoreMapAttributeAggregator$MostFreqAggregator",
      "edu.stanford.nlp.ling.CoreAnnotations$MorphoNumAnnotation",
      "edu.stanford.nlp.objectbank.ReaderIteratorFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$MentionTokenAnnotation",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$Frag",
      "edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer",
      "edu.stanford.nlp.trees.tregex.tsurgeon.Token",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionIDAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$D2_LMiddleAnnotation",
      "edu.stanford.nlp.ling.tokensregex.BasicSequenceMatchResult",
      "edu.stanford.nlp.util.MapFactory$LinkedHashMapFactory",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Thunk",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPatternRoot",
      "edu.stanford.nlp.util.DeltaIndex$1",
      "edu.stanford.nlp.ling.Featurizable",
      "edu.stanford.nlp.semgraph.semgrex.SemgrexPattern",
      "edu.stanford.nlp.ling.LabeledWord",
      "edu.stanford.nlp.fsm.DFSAState",
      "edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddEquivalencedNodeFunction",
      "edu.stanford.nlp.ling.tokensregex.SequencePattern$MatchState",
      "edu.stanford.nlp.util.MapFactory$WeakHashMapFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$GovernorAnnotation",
      "edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams$AddPOSSequenceFunction",
      "edu.stanford.nlp.ling.CoreAnnotations$UtteranceAnnotation",
      "edu.stanford.nlp.trees.TreeFactory",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$DEPENDENT",
      "edu.stanford.nlp.ling.CoreAnnotations$SectionStartAnnotation",
      "edu.stanford.nlp.ie.crf.CRFClassifierFloat",
      "edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$SimpleStringFunction",
      "edu.stanford.nlp.ling.tokensregex.NodePatternTransformer",
      "edu.stanford.nlp.ling.CategoryWordTag",
      "edu.stanford.nlp.trees.tregex.Token",
      "edu.stanford.nlp.util.TypesafeMap",
      "edu.stanford.nlp.time.TimeFormatter$RelaxedNumericDateComponent",
      "edu.stanford.nlp.ling.CoreAnnotations$PercentAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$LengthAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation",
      "edu.stanford.nlp.trees.tregex.CoordinationPattern$CoordinationMatcher",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatchResult",
      "edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParser$LookaheadSuccess",
      "edu.stanford.nlp.ling.CoreAnnotations$PolarityAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$WikipediaEntityAnnotation",
      "edu.stanford.nlp.parser.lexparser.TestOptions",
      "edu.stanford.nlp.ling.CoreAnnotations$CategoryFunctionalTagAnnotation",
      "edu.stanford.nlp.util.ArrayStringFilter",
      "edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams$EnglishTest",
      "edu.stanford.nlp.ling.WordTagFactory",
      "edu.stanford.nlp.ling.CoreAnnotations$HeadWordStringAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$LinkAnnotation",
      "edu.stanford.nlp.parser.lexparser.ArabicTreebankParserParams$AddEquivalencedNodeFunctionVar",
      "edu.stanford.nlp.ling.CoreLabel$OutputFormat",
      "edu.stanford.nlp.ling.CoreAnnotations$NumericValueAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ChineseOrigSegAnnotation",
      "edu.stanford.nlp.international.morph.MorphoFeatures",
      "edu.stanford.nlp.trees.tregex.Relation$3",
      "edu.stanford.nlp.trees.tregex.Relation$4",
      "edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTree",
      "edu.stanford.nlp.trees.tregex.Relation$5",
      "edu.stanford.nlp.util.MapFactory$HashMapFactory",
      "edu.stanford.nlp.trees.tregex.Relation$6",
      "edu.stanford.nlp.trees.tregex.Relation$1",
      "edu.stanford.nlp.trees.tregex.Relation$2",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation",
      "edu.stanford.nlp.trees.TreeVisitor",
      "edu.stanford.nlp.trees.tregex.Relation$7",
      "edu.stanford.nlp.trees.tregex.Relation$8",
      "edu.stanford.nlp.trees.tregex.Relation$9",
      "edu.stanford.nlp.ling.tokensregex.SequenceMatchResult$GroupToIntervalFunc",
      "edu.stanford.nlp.parser.lexparser.FrenchTreebankParserParams",
      "edu.stanford.nlp.ling.CoreAnnotations$DocDateAnnotation",
      "edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams",
      "edu.stanford.nlp.ling.CoreAnnotations$ChunkAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$ChineseIsSegmentedAnnotation",
      "edu.stanford.nlp.ling.CoreAnnotations$HeightAnnotation",
      "edu.stanford.nlp.util.ArrayCoreMap$1",
      "edu.stanford.nlp.classify.ProbabilisticClassifier",
      "edu.stanford.nlp.semgraph.semgrex.GraphRelation$LIMITED_GRANDPARENT",
      "edu.stanford.nlp.util.logging.LogRecordHandler",
      "edu.stanford.nlp.optimization.Evaluator",
      "edu.stanford.nlp.util.Index",
      "edu.stanford.nlp.semgraph.SemanticGraph$OutputFormat"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("edu.stanford.nlp.trees.TypedDependency", false, StringUtils_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("edu.stanford.nlp.util.TypesafeMap$Key", false, StringUtils_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.net.URLStreamHandler", false, StringUtils_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.Comparator", false, StringUtils_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.function.BiFunction", false, StringUtils_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.function.Supplier", false, StringUtils_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(StringUtils_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "edu.stanford.nlp.util.logging.Redwood$RedwoodChannels",
      "edu.stanford.nlp.util.logging.Redwood$Flag",
      "edu.stanford.nlp.util.logging.Redwood$RecordHandlerTree",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration",
      "edu.stanford.nlp.util.logging.LogRecordHandler",
      "edu.stanford.nlp.util.logging.OutputHandler",
      "edu.stanford.nlp.util.logging.Redwood$ConsoleHandler",
      "edu.stanford.nlp.util.logging.Color",
      "edu.stanford.nlp.util.logging.Style",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$2",
      "edu.stanford.nlp.util.logging.VisibilityHandler",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$3",
      "edu.stanford.nlp.util.logging.VisibilityHandler$State",
      "edu.stanford.nlp.util.logging.VisibilityHandler$1",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$4",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$ApproximateRepeatSemantics",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$ExactRepeatSemantics",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$RepeatedRecordInfo",
      "edu.stanford.nlp.util.logging.RepeatedRecordHandler$PendingType",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$5",
      "edu.stanford.nlp.util.logging.RedwoodConfiguration$Handlers$7",
      "edu.stanford.nlp.util.MetaClass",
      "edu.stanford.nlp.util.MetaClass$ClassFactory",
      "edu.stanford.nlp.util.logging.SLF4JHandler",
      "edu.stanford.nlp.util.logging.Redwood",
      "edu.stanford.nlp.util.StringUtils",
      "edu.stanford.nlp.util.Generics",
      "edu.stanford.nlp.math.SloppyMath",
      "edu.stanford.nlp.util.logging.Redwood$Util",
      "edu.stanford.nlp.util.logging.Redwood$Record",
      "edu.stanford.nlp.util.logging.Redwood$MessageType",
      "edu.stanford.nlp.util.logging.Redwood$1",
      "edu.stanford.nlp.util.logging.SLF4JHandler$1",
      "edu.stanford.nlp.util.MapFactory$HashMapFactory",
      "edu.stanford.nlp.util.MapFactory$IdentityHashMapFactory",
      "edu.stanford.nlp.util.MapFactory$WeakHashMapFactory",
      "edu.stanford.nlp.util.MapFactory$TreeMapFactory",
      "edu.stanford.nlp.util.MapFactory$LinkedHashMapFactory",
      "edu.stanford.nlp.util.MapFactory$ArrayMapFactory",
      "edu.stanford.nlp.util.MapFactory$ConcurrentMapFactory",
      "edu.stanford.nlp.util.MapFactory",
      "edu.stanford.nlp.objectbank.ObjectBank$PathToFileFunction",
      "edu.stanford.nlp.io.RuntimeIOException",
      "edu.stanford.nlp.stats.ClassicCounter",
      "edu.stanford.nlp.util.HashIndex",
      "edu.stanford.nlp.io.IOUtils$2",
      "edu.stanford.nlp.io.IOUtils",
      "edu.stanford.nlp.ling.ValueLabel",
      "edu.stanford.nlp.ling.StringLabel",
      "edu.stanford.nlp.ling.Word",
      "edu.stanford.nlp.ling.TaggedWord",
      "edu.stanford.nlp.ling.CategoryWordTag",
      "edu.stanford.nlp.trees.Tree",
      "edu.stanford.nlp.trees.LabeledScoredTreeNode",
      "edu.stanford.nlp.ie.AbstractSequenceClassifier",
      "edu.stanford.nlp.ie.ClassifierCombiner$CombinationMode",
      "edu.stanford.nlp.ie.ClassifierCombiner",
      "edu.stanford.nlp.ie.NERClassifierCombiner",
      "edu.stanford.nlp.util.ArrayCoreMap",
      "edu.stanford.nlp.ling.CoreLabel$OutputFormat",
      "edu.stanford.nlp.ling.CoreLabel",
      "edu.stanford.nlp.ling.BasicDocument",
      "edu.stanford.nlp.process.PTBTokenizer",
      "edu.stanford.nlp.process.PTBTokenizer$PTBTokenizerFactory",
      "edu.stanford.nlp.process.WordTokenFactory",
      "edu.stanford.nlp.ling.DocumentReader",
      "edu.stanford.nlp.util.logging.PrettyLogger",
      "edu.stanford.nlp.time.TimeFormatter$CustomDateFormatExtractor",
      "edu.stanford.nlp.time.TimeFormatter$FormatterBuilder",
      "edu.stanford.nlp.ling.WordTag",
      "edu.stanford.nlp.ling.WordTagFactory",
      "edu.stanford.nlp.ling.WordTag$LabelFactoryHolder",
      "edu.stanford.nlp.process.Morphology",
      "edu.stanford.nlp.process.Morpha",
      "edu.stanford.nlp.ling.IndexedWord",
      "edu.stanford.nlp.sequences.TrueCasingForNISTDocumentReaderAndWriter$LineToTrueCasesParser",
      "edu.stanford.nlp.sequences.TrueCasingForNISTDocumentReaderAndWriter",
      "edu.stanford.nlp.time.TimeExpressionExtractorFactory",
      "edu.stanford.nlp.ie.regexp.NumberSequenceClassifier",
      "edu.stanford.nlp.sequences.SeqClassifierFlags",
      "edu.stanford.nlp.sequences.SeqClassifierFlags$SlashHyphenEnum",
      "edu.stanford.nlp.sequences.Clique",
      "edu.stanford.nlp.sequences.Clique$CliqueEqualityWrapper",
      "edu.stanford.nlp.sequences.FeatureFactory",
      "edu.stanford.nlp.ie.NERFeatureFactory",
      "edu.stanford.nlp.util.MaxSizeConcurrentHashSet",
      "edu.stanford.nlp.process.PTBLexer",
      "edu.stanford.nlp.process.PTBLexer$UntokenizableOptions",
      "edu.stanford.nlp.util.PropertiesUtils",
      "edu.stanford.nlp.ie.crf.CRFClassifier",
      "edu.stanford.nlp.ie.ner.CMMClassifier",
      "edu.stanford.nlp.trees.CompositeTreeTransformer",
      "edu.stanford.nlp.ling.CoreLabel$CoreLabelFactory",
      "edu.stanford.nlp.ling.WordFactory",
      "edu.stanford.nlp.util.DeltaIndex",
      "edu.stanford.nlp.semgraph.SemanticGraphFormatter",
      "edu.stanford.nlp.semgraph.SemanticGraph",
      "edu.stanford.nlp.graph.DirectedMultiGraph",
      "edu.stanford.nlp.util.RegexStringFilter",
      "edu.stanford.nlp.ling.TaggedWordFactory",
      "edu.stanford.nlp.ling.TaggedWord$LabelFactoryHolder",
      "edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation",
      "edu.stanford.nlp.util.ArrayCoreMap$1",
      "edu.stanford.nlp.util.ArrayCoreMap$1$1",
      "edu.stanford.nlp.util.IdentityHashSet",
      "edu.stanford.nlp.ling.LabeledWord",
      "edu.stanford.nlp.util.DeltaIndex$1",
      "edu.stanford.nlp.trees.TypedDependency",
      "edu.stanford.nlp.util.ErasureUtils",
      "edu.stanford.nlp.ie.NERClassifierCombiner$Language",
      "edu.stanford.nlp.util.CollectionUtils",
      "edu.stanford.nlp.util.Pair",
      "edu.stanford.nlp.process.AbstractTokenizer",
      "edu.stanford.nlp.util.ArrayUtils",
      "edu.stanford.nlp.process.CoreLabelTokenFactory",
      "edu.stanford.nlp.trees.SimpleTreeFactory",
      "edu.stanford.nlp.trees.LabeledScoredTreeFactory"
    );
  }
}
